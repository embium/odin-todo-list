/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const listsContainer = document.querySelector(\"[data-lists]\");\nconst newListForm = document.querySelector(\"[data-new-list-form]\");\nconst newListInput = document.querySelector(\"[data-new-list-input]\");\nconst deleteListButton = document.querySelector(\"[data-delete-list-button]\");\nconst listDisplayContainer = document.querySelector(\n  \"[data-list-display-container]\"\n);\nconst listTitleElement = document.querySelector(\"[data-list-title]\");\nconst listCountElement = document.querySelector(\"[data-list-count]\");\nconst tasksContainer = document.querySelector(\"[data-tasks]\");\nconst taskTemplate = document.getElementById(\"task-template\");\nconst newTaskForm = document.querySelector(\"[data-new-task-form]\");\nconst newTaskInput = document.querySelector(\"[data-new-task-input]\");\nconst clearCompleteTasksButton = document.querySelector(\n  \"[data-clear-complete-tasks-button]\"\n);\n\nconst LOCAL_STORAGE_LIST_KEY = \"task.lists\";\nconst LOCAL_STORAGE_SELECTED_LIST_ID_KEY = \"task.selectedListId\";\nlet lists = JSON.parse(localStorage.getItem(LOCAL_STORAGE_LIST_KEY)) || [];\nlet selectedListId = localStorage.getItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY);\n\nlistsContainer.addEventListener(\"click\", (e) => {\n  if (e.target.tagName.toLowerCase() === \"li\") {\n    selectedListId = e.target.dataset.listId;\n    saveAndRender();\n  }\n});\n\ntasksContainer.addEventListener(\"click\", (e) => {\n  if (e.target.tagName.toLowerCase() === \"input\") {\n    const selectedList = lists.find((list) => list.id === selectedListId);\n    const selectedTask = selectedList.tasks.find(\n      (task) => task.id === e.target.id\n    );\n    selectedTask.complete = e.target.checked;\n    save();\n    renderTaskCount(selectedList);\n  }\n});\n\nclearCompleteTasksButton.addEventListener(\"click\", (e) => {\n  const selectedList = lists.find((list) => list.id === selectedListId);\n  selectedList.tasks = selectedList.tasks.filter((task) => !task.complete);\n  saveAndRender();\n});\n\ndeleteListButton.addEventListener(\"click\", (e) => {\n  lists = lists.filter((list) => list.id !== selectedListId);\n  selectedListId = null;\n  saveAndRender();\n});\n\nnewListForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const listName = newListInput.value;\n  if (listName == null || listName === \"\") return;\n  const list = createList(listName);\n  newListInput.value = null;\n  lists.push(list);\n  saveAndRender();\n});\n\nnewTaskForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const taskName = newTaskInput.value;\n  if (taskName == null || taskName === \"\") return;\n  const task = createTask(taskName);\n  newTaskInput.value = null;\n  const selectedList = lists.find((list) => list.id === selectedListId);\n  selectedList.tasks.push(task);\n  saveAndRender();\n});\n\nfunction createList(name) {\n  return { id: Date.now().toString(), name: name, tasks: [] };\n}\n\nfunction createTask(name) {\n  return { id: Date.now().toString(), name: name, complete: false };\n}\n\nfunction saveAndRender() {\n  save();\n  render();\n}\n\nfunction save() {\n  localStorage.setItem(LOCAL_STORAGE_LIST_KEY, JSON.stringify(lists));\n  localStorage.setItem(LOCAL_STORAGE_SELECTED_LIST_ID_KEY, selectedListId);\n}\n\nfunction render() {\n  clearElement(listsContainer);\n  renderLists();\n\n  const selectedList = lists.find((list) => list.id === selectedListId);\n  if (selectedListId == null) {\n    listDisplayContainer.style.display = \"none\";\n  } else {\n    listDisplayContainer.style.display = \"\";\n    listTitleElement.innerText = selectedList.name;\n    renderTaskCount(selectedList);\n    clearElement(tasksContainer);\n    renderTasks(selectedList);\n  }\n}\n\nfunction renderTasks(selectedList) {\n  selectedList.tasks.forEach((task) => {\n    const taskElement = document.importNode(taskTemplate.content, true);\n    const checkbox = taskElement.querySelector(\"input\");\n    checkbox.id = task.id;\n    checkbox.checked = task.complete;\n    const label = taskElement.querySelector(\"label\");\n    label.htmlFor = task.id;\n    label.append(task.name);\n    tasksContainer.appendChild(taskElement);\n  });\n}\n\nfunction renderTaskCount(selectedList) {\n  const incompleteTaskCount = selectedList.tasks.filter(\n    (task) => !task.complete\n  ).length;\n  const taskString = incompleteTaskCount === 1 ? \"task\" : \"tasks\";\n  listCountElement.innerText = `${incompleteTaskCount} ${taskString} remaining`;\n}\n\nfunction renderLists() {\n  lists.forEach((list) => {\n    const listElement = document.createElement(\"li\");\n    listElement.dataset.listId = list.id;\n    listElement.classList.add(\"list-name\");\n    listElement.innerText = list.name;\n    if (list.id === selectedListId) {\n      listElement.classList.add(\"active-list\");\n    }\n    listsContainer.appendChild(listElement);\n  });\n}\n\nfunction clearElement(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nrender();\n\n\n//# sourceURL=webpack://odin-todo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;